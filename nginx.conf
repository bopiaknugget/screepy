worker_processes 1;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Rate limit per IP: 10 requests/s, burst=20
    limit_req_zone $binary_remote_addr zone=per_ip:10m rate=10r/s;
    # Global rate limit: 100 requests/s, burst=50
    limit_req_zone global zone=global:10m rate=100r/s;

    # Limit concurrent connections per IP: 20
    limit_conn_zone $binary_remote_addr zone=per_ip_conn:10m;
    # Global concurrent connection limit: 100
    limit_conn_zone $server_name zone=global_conn:10m;

    # Timeout settings
    client_body_timeout   10s;
    client_header_timeout 10s;
    send_timeout          10s;
    keepalive_timeout     15s;
    keepalive_requests    100;

    # Upstream FastAPI with keepalive connections
    upstream app_upstream {
        server 127.0.0.1:8000;
        keepalive 16;
    }

    server {
        listen       80;
        server_name  _;

        # Change rate limit rejection status to 429
        limit_req_status 429;
        error_page 429 = @too_many_requests;
        location @too_many_requests {
            return 429 "Too Many Requests\n";
        }

        location / {
            # Rate limiting per IP and global
            limit_req zone=per_ip burst=20 nodelay;
            limit_req zone=global burst=50 nodelay;

            # Connection limiting per IP and global
            limit_conn per_ip_conn 20;
            limit_conn global_conn 100;

            # Proxy timeout settings
            proxy_connect_timeout 5s;
            proxy_read_timeout    30s;
            proxy_send_timeout    5s;
            proxy_http_version    1.1;
            proxy_set_header      Connection "";

            # Header forwarding
            proxy_set_header Host                $host;
            proxy_set_header X-Real-IP           $remote_addr;
            proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto   $scheme;

            proxy_pass http://app_upstream;
        }
    }

    # Log paths
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log notice;
}
